/*
Suppose that now we have a list of counts of clicks and corresponding urls such as follows:

counts = ["50,google.com",
     "60,yahoo.com",
     "10,yahoo.com",
     "1,wikipedia.org",
     "40,sports.yahoo.com",
     "300,yahoo.com",
     "2,wikipedia.org",
     "1,stackoverflow.com",
     "1,google.com"]

Write a function that takes this list and returns the sum of all the clicks. 

Sample output:
sum_clicks(counts) => 465

Complexity variables:
n: the number of strings in the list
(The length of each input string has a constant upper limit.)
*/
import java.io.*;
import java.util.*;

public class Solution {
  //Loop thought the string of array.
  //chech ecah element to see if you find , then we stop
  //after print the elements before the ,
  public static int find(String word){
    char[] chars = word.toCharArray();
    int count = 0;
    //"600,mail.yahoo.com"
    // i = 0, 6
    // i = 1, 0
    // i = 2, 0
    // i = 3, ,
    for(int i = 0; i < chars.length; i++){
      if(chars[i] == ','){
        count = i;
        break;
      }
    }
    String total = word.substring(0, count);
    return Integer.parseInt(total);
  }
  public static int count(String[] counts){
    int total = 0;
    for(int i = 0; i < counts.length; i++){
      String word = counts[i];
      total += find(word);
    }
    return total;
  }
  public static void main(String[] argv) {
    String[] counts = {
        "50,google.com",
        "60,yahoo.com",
        "10,yahoo.com",
        "1,wikipedia.org",
        "40,sports.yahoo.com",
        "300,yahoo.com",
        "2,wikipedia.org",
        "1,stackoverflow.com",
        "1,google.com"
    };
    
    String[] url_counts = {
        "50,google.com",
        "60,yahoo.com",
        "10,yahoo.com",
        "1,wikipedia.org",
        "40,sports.yahoo.com",
        "300,yahoo.com",
        "2,wikipedia.org",
        "1,stackoverflow.com",
        "1,google.com"
    };
  }
}

/*

https://www.goodreads.com/book/show/231262.Head_First_Java

Like the previous question, suppose we have a list of clicks and corresponding urls as follows:

url_counts = ["50,google.com",
     "60,yahoo.com",
     "10,yahoo.com",
     "1,wikipedia.org",
     "40,sports.yahoo.com",
     "300,yahoo.com",
     "2,wikipedia.org",
     "1,stackoverflow.com",
     "1,google.com"]

This time, we want to write a function that takes in this input as a parameter and returns a data structure containing the total number of clicks that were recorded on each url.

Note: Use of functions like "split", "index", "indexOf" are now permitted if desired.

Sample output:

url_clicks(counts) =>
google.com           51
yahoo.com:           370
wikipedia.org        3
sports.yahoo.com     40
stackoverflow.com    1

Complexity variables:
n: the number of strings in the list
(The length of the input string has a constant upper limit.)
*/